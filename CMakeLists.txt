CMAKE_MINIMUM_REQUIRED(VERSION 3.0 FATAL_ERROR)

INCLUDE(GNUInstallDirs)

# ---[ Project
PROJECT(FXdiv LANGUAGES CXX)

# ---[ Options.
OPTION(FXDIV_BUILD_TESTS "Build C++ unit tests" OFF)
OPTION(FXDIV_BUILD_BENCHMARKS "Build C++ micro-benchmarks" OFF)

# ---[ CMake options
LIST(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
IF(FXDIV_BUILD_TESTS)
  ENABLE_TESTING()
ENDIF()

# ---[ Build flags
IF(NOT MSVC)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
ENDIF()

# ---[ FXdiv library
ADD_LIBRARY(fxdiv INTERFACE)
TARGET_INCLUDE_DIRECTORIES(fxdiv INTERFACE include)

INSTALL(TARGETS fxdiv
  PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

IF(FXDIV_BUILD_TESTS)
  FIND_PACKAGE(GTest REQUIRED)

  ADD_EXECUTABLE(multiply-high-test test/multiply-high.cc)
  TARGET_INCLUDE_DIRECTORIES(multiply-high-test PRIVATE ${GTEST_INCLUDE_DIRS})
  TARGET_LINK_LIBRARIES(multiply-high-test fxdiv ${GTEST_BOTH_LIBRARIES})
  ADD_TEST(multiply-high multiply-high-test)

  ADD_EXECUTABLE(quotient-test test/quotient.cc)
  TARGET_INCLUDE_DIRECTORIES(quotient-test PRIVATE ${GTEST_INCLUDE_DIRS})
  TARGET_LINK_LIBRARIES(quotient-test fxdiv ${GTEST_BOTH_LIBRARIES})
  ADD_TEST(quotient quotient-test)
ENDIF()

IF(FXDIV_BUILD_BENCHMARKS)
  FIND_PACKAGE(GBenchmark REQUIRED)

  ADD_EXECUTABLE(init-bench bench/init.cc)
  TARGET_INCLUDE_DIRECTORIES(init-bench PRIVATE ${GBENCHMARK_INCLUDE_DIRS})
  TARGET_LINK_LIBRARIES(init-bench fxdiv ${GBENCHMARK_LIBRARIES})

  ADD_EXECUTABLE(multiply-bench bench/multiply.cc)
  TARGET_INCLUDE_DIRECTORIES(multiply-bench PRIVATE ${GBENCHMARK_INCLUDE_DIRS})
  TARGET_LINK_LIBRARIES(multiply-bench fxdiv ${GBENCHMARK_LIBRARIES})

  ADD_EXECUTABLE(divide-bench bench/divide.cc)
  TARGET_INCLUDE_DIRECTORIES(divide-bench PRIVATE ${GBENCHMARK_INCLUDE_DIRS})
  TARGET_LINK_LIBRARIES(divide-bench fxdiv ${GBENCHMARK_LIBRARIES})

  ADD_EXECUTABLE(quotient-bench bench/quotient.cc)
  TARGET_INCLUDE_DIRECTORIES(quotient-bench PRIVATE ${GBENCHMARK_INCLUDE_DIRS})
  TARGET_LINK_LIBRARIES(quotient-bench fxdiv ${GBENCHMARK_LIBRARIES})

  ADD_EXECUTABLE(round-down-bench bench/round-down.cc)
  TARGET_INCLUDE_DIRECTORIES(round-down-bench PRIVATE ${GBENCHMARK_INCLUDE_DIRS})
  TARGET_LINK_LIBRARIES(round-down-bench fxdiv ${GBENCHMARK_LIBRARIES})
ENDIF()
